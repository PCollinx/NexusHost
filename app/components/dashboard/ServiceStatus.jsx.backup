"use client";

import React from "react";
import { motion } from "framer-motion";
import {
  Server,
  Database,
  Globe,
  Mail,
  Shield,
  Activity,
  AlertCircle,
  CheckCircle,
  Clock,
  MoreHorizontal,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";

const services = [
  {
    id: 1,
    name: "Web Server (Apache)",
    type: "Web Hosting",
    status: "online",
    uptime: "99.98%",
    lastRestart: "2 days ago",
    cpu: 23,
    memory: 67,
    icon: Server,
  },
  {
    id: 2,
    name: "MySQL Database",
    type: "Database",
    status: "online",
    uptime: "99.95%",
    lastRestart: "5 days ago",
    cpu: 15,
    memory: 45,
    icon: Database,
  },
  {
    id: 3,
    name: "Email Server",
    type: "Email",
    status: "maintenance",
    uptime: "99.92%",
    lastRestart: "1 hour ago",
    cpu: 8,
    memory: 32,
    icon: Mail,
  },
  {
    id: 4,
    name: "SSL Certificate",
    type: "Security",
    status: "online",
    uptime: "100%",
    lastRestart: "30 days ago",
    cpu: 2,
    memory: 10,
    icon: Shield,
  },
  {
    id: 5,
    name: "CDN Service",
    type: "Performance",
    status: "warning",
    uptime: "99.85%",
    lastRestart: "12 hours ago",
    cpu: 45,
    memory: 78,
    icon: Globe,
  },
];

const statusConfig = {
  online: {
    icon: CheckCircle,
    color: "text-green-500",
    bgColor: "bg-green-100 dark:bg-green-900/20",
    textColor: "text-green-700 dark:text-green-300",
    label: "Online",
  },
  maintenance: {
    icon: Clock,
    color: "text-yellow-500",
    bgColor: "bg-yellow-100 dark:bg-yellow-900/20",
    textColor: "text-yellow-700 dark:text-yellow-300",
    label: "Maintenance",
  },
  warning: {
    icon: AlertCircle,
    color: "text-orange-500",
    bgColor: "bg-orange-100 dark:bg-orange-900/20",
    textColor: "text-orange-700 dark:text-orange-300",
    label: "Warning",
  },
  offline: {
    icon: AlertCircle,
    color: "text-red-500",
    bgColor: "bg-red-100 dark:bg-red-900/20",
    textColor: "text-red-700 dark:text-red-300",
    label: "Offline",
  },
};

export function ServiceStatus() {
  return (
    <div className="bg-white dark:bg-gray-800 rounded-xl p-4 sm:p-6 border border-gray-200 dark:border-gray-700">
      <div className="flex items-center justify-between mb-4 sm:mb-6">
        <h2 className="text-lg sm:text-xl font-bold text-gray-900 dark:text-white">
          <Activity className="w-4 h-4 mr-2 inline" />
          Service Status
        </h2>
        <Button variant="outline" size="sm" className="text-xs sm:text-sm">
          View All
        </Button>
      </div>

      <div className="space-y-3 sm:space-y-4">
        {services.map((service, index) => {
          const statusConfig = getStatusConfig(service.status);
          const StatusIcon = statusConfig.icon;

          return (
            <motion.div
              key={service.id}
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.4, delay: index * 0.1 }}
              className="p-3 sm:p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:shadow-md transition-shadow"
            >
              <div className="flex flex-col xs:flex-row xs:items-start xs:justify-between space-y-2 xs:space-y-0">
                <div className="flex items-center space-x-2 min-w-0 flex-1">
                  <div className="flex-shrink-0">
                    <service.icon className="w-4 h-4 text-gray-600 dark:text-gray-400" />
                  </div>
                  <div className="min-w-0 flex-1">
                    <h3 className="font-semibold text-gray-900 dark:text-white text-sm truncate">
                      {service.name}
                    </h3>
                    <p className="text-xs text-gray-500 dark:text-gray-400 truncate">
                      {service.type} â€¢ {service.uptime}
                    </p>
                  </div>
                </div>

                <div className="flex items-center justify-between xs:justify-end space-x-2">
                  <Badge
                    variant={statusConfig.variant}
                    className={`${statusConfig.color} text-xs flex-shrink-0`}
                  >
                    <StatusIcon className="w-3 h-3 mr-1" />
                    {statusConfig.label}
                  </Badge>
                  <Button variant="ghost" size="sm" className="h-6 w-6 p-0 flex-shrink-0">
                    <MoreHorizontal className="w-3 h-3" />
                  </Button>
                </div>
              </div>

              <div className="mt-3 space-y-2">
                      <div className="flex items-center justify-between text-xs">
                        <span className="text-gray-600 dark:text-gray-400">
                          CPU
                        </span>
                        <span className="font-medium">{service.cpu}%</span>
                      </div>
                      <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-1.5 sm:h-2">
                        <motion.div
                          className={`h-1.5 sm:h-2 rounded-full ${getCpuColor(
                            service.cpu
                          )}`}
                          initial={{ width: 0 }}
                          animate={{ width: `${service.cpu}%` }}
                          transition={{ duration: 1, delay: index * 0.2 }}
                        />
                      </div>

                      <div className="flex items-center justify-between text-xs">
                        <span className="text-gray-600 dark:text-gray-400">
                          Memory
                        </span>
                        <span className="font-medium">{service.memory}%</span>
                      </div>
                      <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-1.5 sm:h-2">
                        <motion.div
                          className={`h-1.5 sm:h-2 rounded-full ${getMemoryColor(
                            service.memory
                          )}`}
                          initial={{ width: 0 }}
                          animate={{ width: `${service.memory}%` }}
                          transition={{ duration: 1, delay: index * 0.2 + 0.1 }}
                        />
                      </div>
                    </div>
                  </div>
                </div>

                <div className="flex-shrink-0 ml-2">
                  <Button variant="ghost" size="sm" className="h-8 w-8 p-0">
                    <MoreHorizontal className="w-4 h-4" />
                  </Button>
                </div>
              </div>

              {/* Additional Info - Hide on very small screens */}
              <div className="mt-3 pt-3 border-t border-gray-100 dark:border-gray-700 hidden xs:block">
                <div className="flex items-center justify-between text-xs text-gray-500 dark:text-gray-400">
                  <span>Last restart: {service.lastRestart}</span>
                  <span className="text-right">
                    Response: {service.responseTime || "< 100ms"}
                  </span>
                </div>
              </div>
            </motion.div>
          );
        })}
      </div>
    </div>
  );
}
